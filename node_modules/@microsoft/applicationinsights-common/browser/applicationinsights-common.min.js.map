{"version":3,"file":"applicationinsights-common.min.js","sources":["../dist-esm/Enums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","../../../common/temp/node_modules/tslib/tslib.es6.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/EnvUtils.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/CoreUtils.js","../../AppInsightsCore/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/DiagnosticLogger.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/TelemetryPluginChain.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/TelemetryHelpers.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/ChannelController.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/BaseCore.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/NotificationManager.js","../../AppInsightsCore/dist-esm/JavaScriptSDK/AppInsightsCore.js","../dist-esm/RequestResponseHeaders.js","../dist-esm/Telemetry/Common/DataSanitizer.js","../dist-esm/Util.js","../dist-esm/Constants.js","../dist-esm/ConnectionStringParser.js","../dist-esm/Interfaces/Contracts/Generated/Data.js","../dist-esm/Interfaces/Contracts/Generated/Base.js","../dist-esm/Interfaces/Contracts/Generated/Envelope.js","../dist-esm/Telemetry/Common/Envelope.js","../dist-esm/Interfaces/Contracts/Generated/Domain.js","../dist-esm/Interfaces/Contracts/Generated/EventData.js","../dist-esm/Telemetry/Event.js","../dist-esm/Interfaces/Contracts/Generated/StackFrame.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","../dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","../dist-esm/Telemetry/Exception.js","../dist-esm/Interfaces/Contracts/Generated/MetricData.js","../dist-esm/Interfaces/Contracts/Generated/DataPointType.js","../dist-esm/Interfaces/Contracts/Generated/DataPoint.js","../dist-esm/Telemetry/Common/DataPoint.js","../dist-esm/Telemetry/Metric.js","../dist-esm/Interfaces/Contracts/Generated/PageViewData.js","../dist-esm/Telemetry/PageView.js","../dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","../dist-esm/Telemetry/RemoteDependencyData.js","../dist-esm/Interfaces/Contracts/Generated/MessageData.js","../dist-esm/Telemetry/Trace.js","../dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","../dist-esm/Telemetry/PageViewPerformance.js","../dist-esm/Telemetry/Common/Data.js","../dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","../dist-esm/Interfaces/IConfig.js","../dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","../dist-esm/TelemetryItemCreator.js","../dist-esm/Interfaces/PartAExtensions.js","../dist-esm/applicationinsights-common.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\n/**\r\n * This file exists to hold environment utilities that are requied to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nexport var strUndefined = \"undefined\";\r\nexport var strObject = \"object\";\r\nexport var strPrototype = \"prototype\";\r\nexport var strFunction = \"function\";\r\nvar strWindow = \"window\";\r\nvar strDocument = \"document\";\r\nvar strNavigator = \"navigator\";\r\nvar strHistory = \"history\";\r\nvar strLocation = \"location\";\r\nvar strPerformance = \"performance\";\r\nvar strJSON = \"JSON\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal() {\r\n    if (typeof globalThis !== strUndefined && globalThis) {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== strUndefined && self) {\r\n        return self;\r\n    }\r\n    if (typeof window !== strUndefined && window) {\r\n        return window;\r\n    }\r\n    if (typeof global !== strUndefined && global) {\r\n        return global;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst(name) {\r\n    var gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name];\r\n    }\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return window;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow() {\r\n    return Boolean(typeof window === strObject && window);\r\n}\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow() {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument() {\r\n    return Boolean(typeof document === strObject && document);\r\n}\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument() {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n    return getGlobalInst(strDocument);\r\n}\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator() {\r\n    return Boolean(typeof navigator === strObject && navigator);\r\n}\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator() {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n    return getGlobalInst(strNavigator);\r\n}\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory() {\r\n    return Boolean(typeof history === strObject && history);\r\n}\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory() {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n    return getGlobalInst(strHistory);\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation() {\r\n    if (typeof location === strObject && location) {\r\n        return location;\r\n    }\r\n    return getGlobalInst(strLocation);\r\n}\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance() {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { getWindow, getDocument, strUndefined, strObject, strFunction, strPrototype } from './EnvUtils';\r\n// Added to help with minfication\r\nexport var Undefined = strUndefined;\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nfunction _isTypeof(value, theType) {\r\n    return typeof value === theType;\r\n}\r\n;\r\nfunction _isUndefined(value) {\r\n    return _isTypeof(value, strUndefined) || value === undefined;\r\n}\r\n;\r\nfunction _isNullOrUndefined(value) {\r\n    return (_isUndefined(value) || value === null);\r\n}\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Object[strPrototype].hasOwnProperty.call(obj, prop);\r\n}\r\n;\r\nfunction _isObject(value) {\r\n    return _isTypeof(value, strObject);\r\n}\r\n;\r\nfunction _isFunction(value) {\r\n    return _isTypeof(value, strFunction);\r\n}\r\n;\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nfunction _attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strAddEventHelper])) {\r\n                // all browsers except IE before version 9\r\n                obj[strAddEventHelper](eventNameWithoutOn, handlerRef, useCapture);\r\n                result = true;\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strAttachEvent])) {\r\n                // IE before version 9                    \r\n                obj[strAttachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventNameWithoutOn {string} - The name of the event\r\n * @param handlerRef {any} - The callback function that needs to be executed for the given event\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nfunction _detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strRemoveEventListener])) {\r\n                obj[strRemoveEventListener](eventNameWithoutOn, handlerRef, useCapture);\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strDetachEvent])) {\r\n                obj[strDetachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    var match = /([^\\w\\d_$])/g;\r\n    if (match.test(name)) {\r\n        value = name.replace(match, \"_\");\r\n    }\r\n    return value;\r\n}\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    CoreUtils.isDate = function (obj) {\r\n        return Object[strPrototype].toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Checks if the type of value is a string.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a string, false otherwise.\r\n     */\r\n    CoreUtils.isString = function (value) {\r\n        return _isTypeof(value, \"string\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a number.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a number, false otherwise.\r\n     */\r\n    CoreUtils.isNumber = function (value) {\r\n        return _isTypeof(value, \"number\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a boolean.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isBoolean = function (value) {\r\n        return _isTypeof(value, \"boolean\");\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    CoreUtils.toISOString = function (date) {\r\n        if (CoreUtils.isDate(date)) {\r\n            var pad = function (num) {\r\n                var r = String(num);\r\n                if (r.length === 1) {\r\n                    r = \"0\" + r;\r\n                }\r\n                return r;\r\n            };\r\n            return date.getUTCFullYear()\r\n                + \"-\" + pad(date.getUTCMonth() + 1)\r\n                + \"-\" + pad(date.getUTCDate())\r\n                + \"T\" + pad(date.getUTCHours())\r\n                + \":\" + pad(date.getUTCMinutes())\r\n                + \":\" + pad(date.getUTCSeconds())\r\n                + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                + \"Z\";\r\n        }\r\n    };\r\n    /**\r\n     * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrForEach = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        for (var idx = 0; idx < len; ++idx) {\r\n            if (idx in arr) {\r\n                callbackfn.call(thisArg || arr, arr[idx], idx, arr);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    CoreUtils.arrIndexOf = function (arr, searchElement, fromIndex) {\r\n        var len = arr.length;\r\n        var from = fromIndex || 0;\r\n        for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {\r\n            if (lp in arr && arr[lp] === searchElement) {\r\n                return lp;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists\r\n     * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page\r\n     * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx\r\n     * implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrMap = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        var _this = thisArg || arr;\r\n        var results = new Array(len);\r\n        for (var lp = 0; lp < len; lp++) {\r\n            if (lp in arr) {\r\n                results[lp] = callbackfn.call(_this, arr[lp], arr);\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is\r\n     * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define\r\n     * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency\r\n     * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    CoreUtils.arrReduce = function (arr, callbackfn, initialValue) {\r\n        var len = arr.length;\r\n        var lp = 0;\r\n        var value;\r\n        // Specifically checking the number of passed arguments as the value could be anything\r\n        if (arguments.length >= 3) {\r\n            value = arguments[2];\r\n        }\r\n        else {\r\n            while (lp < len && !(lp in arr)) {\r\n                lp++;\r\n            }\r\n            value = arr[lp++];\r\n        }\r\n        while (lp < len) {\r\n            if (lp in arr) {\r\n                value = callbackfn(value, arr[lp], lp, arr);\r\n            }\r\n            lp++;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n     * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object to use as a prototype. May be null\r\n     */\r\n    CoreUtils.objCreate = function (obj) {\r\n        if (obj == null) {\r\n            return {};\r\n        }\r\n        if (!_isObject(obj) && !_isFunction(obj)) {\r\n            throw new TypeError('Object prototype may only be an Object: ' + obj);\r\n        }\r\n        function tmpFunc() { }\r\n        ;\r\n        tmpFunc[strPrototype] = obj;\r\n        return new tmpFunc();\r\n    };\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    CoreUtils.objKeys = function (obj) {\r\n        var hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString');\r\n        if (!_isFunction(obj) && (!_isObject(obj) || obj === null)) {\r\n            throw new TypeError('objKeys called on non-object');\r\n        }\r\n        var result = [];\r\n        for (var prop in obj) {\r\n            if (_hasOwnProperty(obj, prop)) {\r\n                result.push(prop);\r\n            }\r\n        }\r\n        if (hasDontEnumBug) {\r\n            var dontEnums = [\r\n                'toString',\r\n                'toLocaleString',\r\n                'valueOf',\r\n                'hasOwnProperty',\r\n                'isPrototypeOf',\r\n                'propertyIsEnumerable',\r\n                'constructor'\r\n            ];\r\n            var dontEnumsLength = dontEnums.length;\r\n            for (var lp = 0; lp < dontEnumsLength; lp++) {\r\n                if (_hasOwnProperty(obj, dontEnums[lp])) {\r\n                    result.push(dontEnums[lp]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n     * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n     * and executed in an ES3 container, providing basic IE8 compatibility.\r\n     * @param target The object on which to define the property.\r\n     * @param prop The name of the property to be defined or modified.\r\n     * @param getProp The getter function to wire against the getter.\r\n     * @param setProp The setter function to wire against the setter.\r\n     * @returns True if it was able to create the accessors otherwise false\r\n     */\r\n    CoreUtils.objDefineAccessors = function (target, prop, getProp, setProp) {\r\n        var defineProp = Object[\"defineProperty\"];\r\n        if (defineProp) {\r\n            try {\r\n                var descriptor = {\r\n                    enumerable: true,\r\n                    configurable: true\r\n                };\r\n                if (getProp) {\r\n                    descriptor.get = getProp;\r\n                }\r\n                if (setProp) {\r\n                    descriptor.set = setProp;\r\n                }\r\n                defineProp(target, prop, descriptor);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n                // We will just ignore this here.\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Trys to add an event handler for the specified event to the window, body and document\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    CoreUtils.addEventHandler = function (eventName, callback) {\r\n        var result = false;\r\n        var w = getWindow();\r\n        if (w) {\r\n            result = _attachEvent(w, eventName, callback);\r\n            result = _attachEvent(w[\"body\"], eventName, callback) || result;\r\n        }\r\n        var doc = getDocument();\r\n        if (doc) {\r\n            result = EventHelper.Attach(doc, eventName, callback) || result;\r\n        }\r\n        return result;\r\n    };\r\n    CoreUtils.isTypeof = _isTypeof;\r\n    CoreUtils.isUndefined = _isUndefined;\r\n    CoreUtils.isNullOrUndefined = _isNullOrUndefined;\r\n    CoreUtils.hasOwnProperty = _hasOwnProperty;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isFunction = _isFunction;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isObject = _isObject;\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.Attach = _attachEvent;\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @deprecated Use {@link EventHelper#Attach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.AttachEvent = _attachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.Detach = _detachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @deprecated Use {@link EventHelper#Detach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.DetachEvent = _detachEvent;\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72,\r\n    PluginException: 73\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { hasJSON, getJSON } from \"./EnvUtils\";\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        this.messageId = msgId;\r\n        this.message =\r\n            (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = \"\";\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(strProps) : \"\");\r\n        this.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n        if (text) {\r\n            return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n        }\r\n        return \"\";\r\n    };\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    /**\r\n     * For user non actionable traces use AI Internal prefix.\r\n     */\r\n    _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n    /**\r\n     * Prefix of the traces in portal.\r\n     */\r\n    _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         *  Session storage key for the prefix for the key indicating message type already logged\r\n         */\r\n        this.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        this._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        this._messageLogged = {};\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        this.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * 0: OFF (default)\r\n         * 1: CRITICAL\r\n         * 2: >= WARNING\r\n         */\r\n        this.consoleLoggingLevel = function () { return 0; };\r\n        /**\r\n         * 0: OFF\r\n         * 1: CRITICAL (default)\r\n         * 2: >= WARNING\r\n         */\r\n        this.telemetryLoggingLevel = function () { return 1; };\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        this.maxInternalMessageLimit = function () { return 25; };\r\n        if (CoreUtils.isNullOrUndefined(config)) {\r\n            // TODO: Use default config\r\n            // config = AppInsightsCore.defaultConfig;\r\n            // For now, use defaults specified in DiagnosticLogger members;\r\n            return;\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n            this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n            this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n            this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n        }\r\n        if (!CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n            this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n        }\r\n    }\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n        var _this = this;\r\n        if (_this.enableDebugExceptions()) {\r\n            throw message;\r\n        }\r\n        else {\r\n            if (!CoreUtils.isUndefined(message) && !!message) {\r\n                if (!CoreUtils.isUndefined(message.message)) {\r\n                    if (isUserAct) {\r\n                        // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                        var messageKey = +message.messageId;\r\n                        if (!_this._messageLogged[messageKey] && _this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            _this.warnToConsole(message.message);\r\n                            _this._messageLogged[messageKey] = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                        if (_this.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                            _this.warnToConsole(message.message);\r\n                        }\r\n                    }\r\n                    _this.logInternalMessage(severity, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        if (!CoreUtils.isUndefined(console) && !!console) {\r\n            if (CoreUtils.isFunction(console.warn)) {\r\n                console.warn(message);\r\n            }\r\n            else if (CoreUtils.isFunction(console.log)) {\r\n                console.log(message);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        this._messageCount = 0;\r\n        this._messageLogged = {};\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        var _this = this;\r\n        if (_this._areInternalMessagesThrottled()) {\r\n            return;\r\n        }\r\n        // check if this message type was already logged for this session and if so, don't log it again\r\n        var logMessage = true;\r\n        var messageKey = _this.AIInternalMessagePrefix + message.messageId;\r\n        // if the session storage is not available, limit to only one message type per page view\r\n        if (_this._messageLogged[messageKey]) {\r\n            logMessage = false;\r\n        }\r\n        else {\r\n            _this._messageLogged[messageKey] = true;\r\n        }\r\n        if (logMessage) {\r\n            // Push the event in the internal queue\r\n            if (severity <= _this.telemetryLoggingLevel()) {\r\n                _this.queue.push(message);\r\n                _this._messageCount++;\r\n            }\r\n            // When throttle limit reached, send a special event\r\n            if (_this._messageCount === _this.maxInternalMessageLimit()) {\r\n                var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                _this.queue.push(throttleMessage);\r\n                _this.warnToConsole(throttleLimitMessage);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Indicates whether the internal events are throttled\r\n     */\r\n    DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n        return this._messageCount >= this.maxInternalMessageLimit();\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { LoggingSeverity, _InternalMessageId } from '../JavaScriptSDK.Enums/LoggingEnums';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar TelemetryPluginChain = /** @class */ (function () {\r\n    function TelemetryPluginChain(plugin, defItemCtx) {\r\n        var _self = this;\r\n        var _nextProxy = null;\r\n        var _hasProcessTelemetry = _isFunction(plugin.processTelemetry);\r\n        var _hasSetNext = _isFunction(plugin.setNextPlugin);\r\n        _self._hasRun = false;\r\n        _self.getPlugin = function () {\r\n            return plugin;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processTelemetry = function (env, itemCtx) {\r\n            if (!itemCtx) {\r\n                // Looks like a plugin didn't pass the (optional) context, so restore to the default\r\n                itemCtx = defItemCtx;\r\n            }\r\n            if (plugin && _hasProcessTelemetry) {\r\n                _self._hasRun = true;\r\n                try {\r\n                    // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n                    // doesn't calls processTelemetry() instead of itemContext.processNext() or some \r\n                    // other form of error occurred\r\n                    itemCtx.setNext(_nextProxy);\r\n                    if (_hasSetNext) {\r\n                        // Backward compatibility setting the next plugin on the instance\r\n                        plugin.setNextPlugin(_nextProxy);\r\n                    }\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    _nextProxy && (_nextProxy._hasRun = false);\r\n                    plugin.processTelemetry(env, itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasRun = _nextProxy && _nextProxy._hasRun;\r\n                    if (!_nextProxy || !hasRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.PluginException, \"Plugin [\" + plugin.identifier + \"] failed during processTelemetry - \" + error);\r\n                    }\r\n                    if (_nextProxy && !hasRun) {\r\n                        // As part of the failure the current plugin did not attempt to call the next plugin in the cahin\r\n                        // So rather than leave the pipeline dead in the water we call the next plugin\r\n                        _nextProxy.processTelemetry(env, itemCtx);\r\n                    }\r\n                }\r\n            }\r\n            else if (_nextProxy) {\r\n                _self._hasRun = true;\r\n                // The underlying plugin is either not defined or does not have a processTelemetry implementation\r\n                // so we still want the next plugin to be executed.\r\n                _nextProxy.processTelemetry(env, itemCtx);\r\n            }\r\n        };\r\n    }\r\n    return TelemetryPluginChain;\r\n}());\r\nexport { TelemetryPluginChain };\r\n//# sourceMappingURL=TelemetryPluginChain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { TelemetryPluginChain } from \"./TelemetryPluginChain\";\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n/**\r\n * Creates the instance execution chain for the plugins\r\n */\r\nfunction _createProxyChain(plugins, itemCtx) {\r\n    var proxies = [];\r\n    if (plugins && plugins.length > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy = null;\r\n        for (var idx = 0; idx < plugins.length; idx++) {\r\n            var thePlugin = plugins[idx];\r\n            if (thePlugin && CoreUtils.isFunction(thePlugin.processTelemetry)) {\r\n                // Only add plugins that are processors\r\n                var newProxy = new TelemetryPluginChain(thePlugin, itemCtx);\r\n                proxies.push(newProxy);\r\n                if (lastProxy) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy.setNext(newProxy);\r\n                }\r\n                lastProxy = newProxy;\r\n            }\r\n        }\r\n    }\r\n    return proxies.length > 0 ? proxies[0] : null;\r\n}\r\nfunction _copyProxyChain(proxy, itemCtx, startAt) {\r\n    var plugins = [];\r\n    var add = startAt ? false : true;\r\n    if (proxy) {\r\n        while (proxy) {\r\n            var thePlugin = proxy.getPlugin();\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    if (!add) {\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nfunction _copyPluginChain(srcPlugins, itemCtx, startAt) {\r\n    var plugins = srcPlugins;\r\n    var add = false;\r\n    if (startAt && srcPlugins) {\r\n        plugins = [];\r\n        CoreUtils.arrForEach(srcPlugins, function (thePlugin) {\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !add) {\r\n        if (!plugins) {\r\n            plugins = [];\r\n        }\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(plugins, config, core, startAt) {\r\n        var _self = this;\r\n        var _nextProxy = null; // Null == No next plugin\r\n        // There is no next element (null) vs not defined (undefined)\r\n        if (startAt !== null) {\r\n            if (plugins && CoreUtils.isFunction(plugins.getPlugin)) {\r\n                // We have a proxy chain object\r\n                _nextProxy = _copyProxyChain(plugins, _self, startAt || plugins.getPlugin());\r\n            }\r\n            else {\r\n                // We just have an array\r\n                if (startAt) {\r\n                    _nextProxy = _copyPluginChain(plugins, _self, startAt);\r\n                }\r\n                else if (CoreUtils.isUndefined(startAt)) {\r\n                    // Undefined means copy the existing chain\r\n                    _nextProxy = _createProxyChain(plugins, _self);\r\n                }\r\n            }\r\n        }\r\n        _self.core = function () {\r\n            return core;\r\n        };\r\n        _self.diagLog = function () {\r\n            var logger = (core || {}).logger;\r\n            if (!logger) {\r\n                // Fallback so we always have a logger\r\n                logger = new DiagnosticLogger(config || {});\r\n            }\r\n            return logger;\r\n        };\r\n        _self.getCfg = function () {\r\n            return config;\r\n        };\r\n        _self.getExtCfg = function (identifier, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = {}; }\r\n            var theConfig;\r\n            if (config) {\r\n                var extConfig = config.extensionConfig;\r\n                if (extConfig && identifier) {\r\n                    theConfig = extConfig[identifier];\r\n                }\r\n            }\r\n            return (theConfig ? theConfig : defaultValue);\r\n        };\r\n        _self.getConfig = function (identifier, field, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            var theValue;\r\n            var extConfig = _self.getExtCfg(identifier, null);\r\n            if (extConfig && !_isNullOrUndefined(extConfig[field])) {\r\n                theValue = extConfig[field];\r\n            }\r\n            else if (config && !_isNullOrUndefined(config[field])) {\r\n                theValue = config[field];\r\n            }\r\n            return !_isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n        };\r\n        _self.hasNext = function () {\r\n            return _nextProxy != null;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processNext = function (env) {\r\n            var nextPlugin = _nextProxy;\r\n            if (nextPlugin) {\r\n                // Automatically move to the next plugin\r\n                _nextProxy = nextPlugin.getNext();\r\n                nextPlugin.processTelemetry(env, _self);\r\n            }\r\n        };\r\n        _self.createNew = function (plugins, startAt) {\r\n            if (plugins === void 0) { plugins = null; }\r\n            return new ProcessTelemetryContext(plugins || _nextProxy, config, core, startAt);\r\n        };\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar getPlugin = \"getPlugin\";\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this;\r\n        var _isinitialized = false;\r\n        var _rootCtx = null; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin = null; // Used for backward compatibility where plugins don't call the main pipeline\r\n        _self.core = null;\r\n        _self.diagLog = function (itemCtx) {\r\n            return _self._getTelCtx(itemCtx).diagLog();\r\n        };\r\n        _self.isInitialized = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self.setNextPlugin = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self.processNext = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx.processNext(env);\r\n            }\r\n            else if (_nextPlugin && _isFunction(_nextPlugin.processTelemetry)) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks \r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin.processTelemetry(env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = function (currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || new ProcessTelemetryContext(null, {}, _self.core);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin[getPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        };\r\n        _self._baseTelInit = function (config, core, extensions, pluginChain) {\r\n            if (config) {\r\n                // Make sure the extensionConfig exists\r\n                config.extensionConfig = config.extensionConfig || [];\r\n            }\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core.getProcessTelContext().getNext();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[getPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self.core = core;\r\n            _rootCtx = new ProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n            _isinitialized = true;\r\n        };\r\n    }\r\n    BaseTelemetryPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        this._baseTelInit(config, core, extensions, pluginChain);\r\n    };\r\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar processTelemetry = \"processTelemetry\";\r\nvar priority = \"priority\";\r\nvar setNextPlugin = \"setNextPlugin\";\r\nvar isInitialized = \"isInitialized\";\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config The current config for the instance\r\n * @param core THe current core instance\r\n * @param extensions The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext.getNext();\r\n    while (proxy) {\r\n        var thePlugin = proxy.getPlugin();\r\n        if (thePlugin) {\r\n            if (lastPlugin &&\r\n                _isFunction(lastPlugin[setNextPlugin]) &&\r\n                _isFunction(thePlugin[processTelemetry])) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[setNextPlugin](thePlugin);\r\n            }\r\n            if (!_isFunction(thePlugin[isInitialized]) || !thePlugin[isInitialized]()) {\r\n                initPlugins.push(thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    // Now initiatilize the plugins\r\n    CoreUtils.arrForEach(initPlugins, function (thePlugin) {\r\n        thePlugin.initialize(processContext.getCfg(), processContext.core(), extensions, processContext.getNext());\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        var bHasProcess = _isFunction(extB[processTelemetry]);\r\n        if (_isFunction(extA[processTelemetry])) {\r\n            result = bHasProcess ? extA[priority] - extB[priority] : 1;\r\n        }\r\n        else if (bHasProcess) {\r\n            result = -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete    \r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport * as tslib_1 from \"tslib\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { BaseTelemetryPlugin } from './BaseTelemetryPlugin';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins } from './TelemetryHelpers';\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar _arrForEach = CoreUtils.arrForEach;\r\nvar _objDefineAccessors = CoreUtils.objDefineAccessors;\r\nfunction _checkQueuePriority(queue) {\r\n    _arrForEach(queue, function (queueItem) {\r\n        if (queueItem.priority < ChannelControllerPriority) {\r\n            throw Error(ChannelValidationMessage + queueItem.identifier);\r\n        }\r\n    });\r\n}\r\nfunction _addChannelQueue(channelQueues, queue) {\r\n    if (queue && queue.length > 0) {\r\n        queue = queue.sort(function (a, b) {\r\n            return a.priority - b.priority;\r\n        });\r\n        _checkQueuePriority(queue);\r\n        channelQueues.push(queue);\r\n    }\r\n}\r\nfunction _createChannelQueues(channels, extensions) {\r\n    var channelQueues = [];\r\n    if (channels) {\r\n        // Add and sort the configuration channel queues\r\n        _arrForEach(channels, function (queue) { return _addChannelQueue(channelQueues, queue); });\r\n    }\r\n    if (extensions) {\r\n        // Create a new channel queue for any extensions with a priority > the ChannelControllerPriority\r\n        var extensionQueue_1 = [];\r\n        _arrForEach(extensions, function (plugin) {\r\n            if (plugin.priority > ChannelControllerPriority) {\r\n                extensionQueue_1.push(plugin);\r\n            }\r\n        });\r\n        _addChannelQueue(channelQueues, extensionQueue_1);\r\n    }\r\n    return channelQueues;\r\n}\r\nvar ChannelController = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChannelController, _super);\r\n    function ChannelController() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.identifier = \"ChannelControllerPlugin\";\r\n        _this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n        return _this;\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item, itemCtx) {\r\n        var _this = this;\r\n        if (this._channelQueue) {\r\n            _arrForEach(this._channelQueue, function (queues) {\r\n                // pass on to first item in queue\r\n                if (queues.length > 0) {\r\n                    // Copying the item context as we could have mutiple chains that are executing asynchronously\r\n                    // and calling _getDefTelCtx as it's possible that the caller doesn't pass any context\r\n                    var chainCtx = _this._getTelCtx(itemCtx).createNew(queues);\r\n                    chainCtx.processNext(item);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ;\r\n    ChannelController.prototype.getChannelControls = function () {\r\n        return this._channelQueue;\r\n    };\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        var _self = this;\r\n        if (_self.isInitialized()) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        _super.prototype.initialize.call(this, config, core, extensions);\r\n        if (config.isCookieUseDisabled) {\r\n            CoreUtils.disableCookies();\r\n        }\r\n        var channelQueue = _self._channelQueue = _createChannelQueues((config || {}).channels, extensions);\r\n        // Initialize the Queues\r\n        _arrForEach(channelQueue, function (queue) { return initializePlugins(new ProcessTelemetryContext(queue, config, core), extensions); });\r\n    };\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    // tslint:disable-next-line\r\n    ChannelController._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        _objDefineAccessors(ChannelController.prototype, \"ChannelControls\", ChannelController.prototype.getChannelControls);\r\n        _objDefineAccessors(ChannelController.prototype, \"channelQueue\", ChannelController.prototype.getChannelControls);\r\n    })();\r\n    return ChannelController;\r\n}(BaseTelemetryPlugin));\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ChannelController } from './ChannelController';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins, sortPlugins } from './TelemetryHelpers';\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar _arrForEach = CoreUtils.arrForEach;\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        var _isInitialized = false;\r\n        var _this = this;\r\n        _this._extensions = new Array();\r\n        _this._channelController = new ChannelController();\r\n        _this.isInitialized = function () { return _isInitialized; };\r\n        _this._setInit = function (value) { _isInitialized = value; };\r\n        _this._eventQueue = [];\r\n    }\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        var _this = this;\r\n        // Make sure core is only initialized once\r\n        if (_this.isInitialized()) {\r\n            throw Error(\"Core should not be initialized more than once\");\r\n        }\r\n        if (!config || _isNullOrUndefined(config.instrumentationKey)) {\r\n            throw Error(\"Please provide instrumentation key\");\r\n        }\r\n        _this.config = config;\r\n        var channelController = _this._channelController;\r\n        if (!notificationManager) {\r\n            // Create Dummy notification manager\r\n            notificationManager = CoreUtils.objCreate({\r\n                addNotificationListener: function (listener) { },\r\n                removeNotificationListener: function (listener) { },\r\n                eventsSent: function (events) { },\r\n                eventsDiscarded: function (events, reason) { }\r\n            });\r\n        }\r\n        _this._notificationManager = notificationManager;\r\n        config.extensions = _isNullOrUndefined(config.extensions) ? [] : config.extensions;\r\n        // add notification to the extensions in the config so other plugins can access it\r\n        var extConfig = config.extensionConfig = _isNullOrUndefined(config.extensionConfig) ? {} : config.extensionConfig;\r\n        extConfig.NotificationManager = notificationManager;\r\n        if (!logger) {\r\n            logger = CoreUtils.objCreate({\r\n                throwInternal: function (severity, msgId, msg, properties, isUserAct) {\r\n                    if (isUserAct === void 0) { isUserAct = false; }\r\n                },\r\n                warnToConsole: function (message) { },\r\n                resetInternalMessageCount: function () { }\r\n            });\r\n        }\r\n        _this.logger = logger;\r\n        // Concat all available extensions\r\n        var allExtensions = [];\r\n        allExtensions.push.apply(allExtensions, extensions.concat(config.extensions));\r\n        allExtensions = sortPlugins(allExtensions);\r\n        var coreExtensions = [];\r\n        var channelExtensions = [];\r\n        // Check if any two extensions have the same priority, then warn to console\r\n        // And extract the local extensions from the \r\n        var extPriorities = {};\r\n        // Extension validation\r\n        _arrForEach(allExtensions, function (ext) {\r\n            if (_isNullOrUndefined(ext) || _isNullOrUndefined(ext.initialize)) {\r\n                throw Error(validationError);\r\n            }\r\n            var extPriority = ext.priority;\r\n            var identifier = ext.identifier;\r\n            if (ext && extPriority) {\r\n                if (!_isNullOrUndefined(extPriorities[extPriority])) {\r\n                    logger.warnToConsole(\"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n                }\r\n                else {\r\n                    // set a value\r\n                    extPriorities[extPriority] = identifier;\r\n                }\r\n            }\r\n            // Split extensions to core and channelController\r\n            if (!extPriority || extPriority < channelController.priority) {\r\n                // Add to core extension that will be managed by BaseCore\r\n                coreExtensions.push(ext);\r\n            }\r\n            else {\r\n                // Add all other extensions to be managed by the channel controller\r\n                channelExtensions.push(ext);\r\n            }\r\n        });\r\n        // Validation complete\r\n        // Add the channelController to the complete extension collection and\r\n        // to the end of the core extensions\r\n        allExtensions.push(channelController);\r\n        coreExtensions.push(channelController);\r\n        // Sort the complete set of extensions by priority\r\n        allExtensions = sortPlugins(allExtensions);\r\n        _this._extensions = allExtensions;\r\n        // initialize channel controller first, this will initialize all channel plugins\r\n        initializePlugins(new ProcessTelemetryContext([channelController], config, _this), allExtensions);\r\n        initializePlugins(new ProcessTelemetryContext(coreExtensions, config, _this), allExtensions);\r\n        // Now reset the extensions to just those being managed by Basecore\r\n        _this._extensions = coreExtensions;\r\n        if (_this.getTransmissionControls().length === 0) {\r\n            throw new Error(\"No channels available\");\r\n        }\r\n        _this._setInit(true);\r\n    };\r\n    BaseCore.prototype.getTransmissionControls = function () {\r\n        return this._channelController.getChannelControls();\r\n    };\r\n    BaseCore.prototype.track = function (telemetryItem) {\r\n        var _this = this;\r\n        if (!telemetryItem.iKey) {\r\n            // setup default iKey if not passed in\r\n            telemetryItem.iKey = _this.config.instrumentationKey;\r\n        }\r\n        if (!telemetryItem.time) {\r\n            // add default timestamp if not passed in\r\n            telemetryItem.time = CoreUtils.toISOString(new Date());\r\n        }\r\n        if (_isNullOrUndefined(telemetryItem.ver)) {\r\n            // CommonSchema 4.0\r\n            telemetryItem.ver = \"4.0\";\r\n        }\r\n        if (_this.isInitialized()) {\r\n            // Release queue\r\n            if (_this._eventQueue.length > 0) {\r\n                _arrForEach(_this._eventQueue, function (event) {\r\n                    _this.getProcessTelContext().processNext(event);\r\n                });\r\n                _this._eventQueue = [];\r\n            }\r\n            // Process the telemetry plugin chain\r\n            _this.getProcessTelContext().processNext(telemetryItem);\r\n        }\r\n        else {\r\n            // Queue events until all extensions are initialized\r\n            _this._eventQueue.push(telemetryItem);\r\n        }\r\n    };\r\n    BaseCore.prototype.getProcessTelContext = function () {\r\n        var _this = this;\r\n        var extensions = _this._extensions;\r\n        var thePlugins = extensions;\r\n        // invoke any common telemetry processors before sending through pipeline\r\n        if (!extensions || extensions.length === 0) {\r\n            // Pass to Channel controller so data is sent to correct channel queues\r\n            thePlugins = [_this._channelController];\r\n        }\r\n        return new ProcessTelemetryContext(thePlugins, _this.config, _this);\r\n    };\r\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","import { CoreUtils } from \"./CoreUtils\";\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager() {\r\n        this.listeners = [];\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        var index = CoreUtils.arrIndexOf(this.listeners, listener);\r\n        while (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n            index = CoreUtils.arrIndexOf(this.listeners, listener);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        var _this = this;\r\n        var _loop_1 = function (i) {\r\n            if (this_1.listeners[i].eventsSent) {\r\n                setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        var _this = this;\r\n        var _loop_2 = function (i) {\r\n            if (this_2.listeners[i].eventsDiscarded) {\r\n                setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n            }\r\n        };\r\n        var this_2 = this;\r\n        for (var i = 0; i < this.listeners.length; ++i) {\r\n            _loop_2(i);\r\n        }\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","import * as tslib_1 from \"tslib\";\r\nimport { BaseCore } from './BaseCore';\r\nimport { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        return _super.call(this) || this;\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n        var _self = this;\r\n        _self._notificationManager = new NotificationManager();\r\n        _self.logger = new DiagnosticLogger(config);\r\n        _self.config = config;\r\n        _super.prototype.initialize.call(this, config, extensions, _self.logger, _self._notificationManager);\r\n    };\r\n    AppInsightsCore.prototype.getTransmissionControls = function () {\r\n        return _super.prototype.getTransmissionControls.call(this);\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        if (telemetryItem === null) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            // throw error\r\n            throw Error(\"Invalid telemetry item\");\r\n        }\r\n        // do basic validation before sending it through the pipeline\r\n        this._validateTelemetryItem(telemetryItem);\r\n        _super.prototype.track.call(this, telemetryItem);\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        var _this = this;\r\n        var interval = this.config.diagnosticLogInterval;\r\n        if (!interval || !(interval > 0)) {\r\n            interval = 10000;\r\n        }\r\n        return setInterval(function () {\r\n            var _self = _this;\r\n            var queue = _self.logger ? _self.logger.queue : [];\r\n            CoreUtils.arrForEach(queue, function (logMessage) {\r\n                var item = {\r\n                    name: eventName ? eventName : \"InternalMessageId: \" + logMessage.messageId,\r\n                    iKey: _self.config.instrumentationKey,\r\n                    time: CoreUtils.toISOString(new Date()),\r\n                    baseType: _InternalLogMessage.dataType,\r\n                    baseData: { message: logMessage.message }\r\n                };\r\n                _self.track(item);\r\n            });\r\n            queue.length = 0;\r\n        }, interval);\r\n    };\r\n    AppInsightsCore.prototype._validateTelemetryItem = function (telemetryItem) {\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n            this._notifyInvalidEvent(telemetryItem);\r\n            throw Error(\"telemetry name required\");\r\n        }\r\n    };\r\n    AppInsightsCore.prototype._notifyInvalidEvent = function (telemetryItem) {\r\n        if (this._notificationManager) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n        }\r\n    };\r\n    return AppInsightsCore;\r\n}(BaseCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId, CoreUtils, hasJSON, getJSON } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (CoreUtils.isObject(value) && hasJSON()) {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = getJSON().stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (!CoreUtils.isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, EventHelper, _InternalMessageId, LoggingSeverity, getGlobal, getGlobalInst, getWindow, getDocument, getNavigator, getPerformance, getLocation, hasJSON, getJSON, strPrototype } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar _navigator = getNavigator();\r\nvar _isString = CoreUtils.isString;\r\nvar _uaDisallowsSameSiteNone = null;\r\nfunction _endsWith(value, search) {\r\n    var len = value.length;\r\n    var start = len - search.length;\r\n    return value.substring(start >= 0 ? start : 0, len) === search;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (CoreUtils.isFunction(Event)) {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            var doc = getDocument();\r\n            if (doc && doc.createEvent) {\r\n                event = doc.createEvent(\"Event\");\r\n                event.initEvent(eventName, true, true);\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (CoreUtils.isNullOrUndefined(getGlobal())) {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? getGlobalInst(\"localStorage\") : getGlobalInst(\"sessionStorage\");\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in getGlobalInst(\"sessionStorage\")) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    Util.disallowsSameSiteNone = function (userAgent) {\r\n        if (!_isString(userAgent)) {\r\n            return false;\r\n        }\r\n        // Cover all iOS based browsers here. This includes:\r\n        // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n        // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n        if (userAgent.indexOf(\"CPU iPhone OS 12\") !== -1 || userAgent.indexOf(\"iPad; CPU OS 12\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n        // - Safari on Mac OS X\r\n        // This does not include:\r\n        // - Internal browser on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && userAgent.indexOf(\"Version/\") !== -1 && userAgent.indexOf(\"Safari\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n        // - Internal browser on Mac OS X\r\n        // This does not include:\r\n        // - Safari on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && _endsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n            return true;\r\n        }\r\n        // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n        // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n        // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n        if (userAgent.indexOf(\"Chrome/5\") !== -1 || userAgent.indexOf(\"Chrome/6\") !== -1) {\r\n            return true;\r\n        }\r\n        // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n        // that don't specify their Chrome version as lacking support for SameSite=None.\r\n        if (userAgent.indexOf(\"UnrealEngine\") !== -1 && userAgent.indexOf(\"Chrome\") === -1) {\r\n            return true;\r\n        }\r\n        // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n        // NB: this rule isn't complete - you need regex to make a complete rule.\r\n        // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n        if (userAgent.indexOf(\"UCBrowser/12\") !== -1 || userAgent.indexOf(\"UCBrowser/11\") !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        if (Util.canUseCookies(logger)) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            var location_1 = getLocation();\r\n            if (location_1 && location_1.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n                if (_uaDisallowsSameSiteNone === null) {\r\n                    _uaDisallowsSameSiteNone = Util.disallowsSameSiteNone((getNavigator() || {}).userAgent);\r\n                }\r\n                if (!_uaDisallowsSameSiteNone) {\r\n                    value = value + \";SameSite=None\"; // SameSite can only be set on secure pages\r\n                }\r\n            }\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = function (str) {\r\n        if (!_isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = function () {\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        var result = \"\";\r\n        // tslint:disable-next-line:insecure-random\r\n        var random = Math.random() * 1073741824; // 5 symbols in base64, almost maxint\r\n        while (random > 0) {\r\n            var char = base64chars.charAt(random % 64);\r\n            result += char;\r\n            random = Math.floor(random / 64);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return (0x100000000 * Math.random()) | 0;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = Util.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (Math.random() * 4) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = function (obj) {\r\n        return Object[strPrototype].toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = function (obj) {\r\n        return Object[strPrototype].toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Gets IE version if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : (_navigator ? (_navigator.userAgent || \"\").toLowerCase() : \"\");\r\n        return (myNav.indexOf('msie') !== -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        var propertyValueDump = \"\";\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        else if (hasJSON()) {\r\n            propertyValueDump = getJSON().stringify(object);\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event to the window\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        return EventHelper.Attach(getWindow(), eventName, callback);\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in _navigator && _navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = getDocument() || {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = CoreUtils.isDate;\r\n    // Keeping this name for backward compatibility (for now)\r\n    Util.toISOStringForIE8 = CoreUtils.toISOString;\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        if (!UrlHelper.htmlAnchorElement) {\r\n            UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : { host: UrlHelper.parseHost(url) }; // fill host field in the fallback case as that is the only externally required field from this fn\r\n        }\r\n        UrlHelper.htmlAnchorElement.href = url;\r\n        return UrlHelper.htmlAnchorElement;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url) {\r\n        if (url) {\r\n            var match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\r\n            if (match != null && match.length > 2 && _isString(match[2]) && match[2].length > 0) {\r\n                return match[2];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    UrlHelper.document = getDocument() || {};\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n     * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n     * they are regexed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n     * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n     * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (config && config.disableCorrelationHeaders) {\r\n            return false;\r\n        }\r\n        if (!requestUrl) {\r\n            return false;\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            CoreUtils.arrForEach(includedDomains, function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n        // Previously we always returned false for a falsy requestHost\r\n        return requestHost && requestHost.length > 0;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = function () {\r\n        // returns the window or webworker performance object\r\n        var perf = getPerformance();\r\n        if (perf && perf.now && perf.timing) {\r\n            return perf.now() + perf.timing.navigationStart;\r\n        }\r\n        return new Date().getTime();\r\n    };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar ConnectionStringParser = /** @class */ (function () {\r\n    function ConnectionStringParser() {\r\n    }\r\n    ConnectionStringParser.parse = function (connectionString) {\r\n        if (!connectionString) {\r\n            return {};\r\n        }\r\n        var kvPairs = connectionString.split(ConnectionStringParser._FIELDS_SEPARATOR);\r\n        var result = CoreUtils.arrReduce(kvPairs, function (fields, kv) {\r\n            var kvParts = kv.split(ConnectionStringParser._FIELD_KEY_VALUE_SEPARATOR);\r\n            if (kvParts.length === 2) {\r\n                var key = kvParts[0].toLowerCase();\r\n                var value = kvParts[1];\r\n                fields[key] = value;\r\n            }\r\n            return fields;\r\n        }, {});\r\n        if (CoreUtils.objKeys(result).length > 0) {\r\n            // this is a valid connection string, so parse the results\r\n            if (result.endpointsuffix) {\r\n                // use endpoint suffix where overrides are not provided\r\n                var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n                result.ingestionendpoint = result.ingestionendpoint || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n            }\r\n            // apply the default endpoints\r\n            result.ingestionendpoint = result.ingestionendpoint || DEFAULT_BREEZE_ENDPOINT;\r\n        }\r\n        return result;\r\n    };\r\n    ConnectionStringParser._FIELDS_SEPARATOR = \";\";\r\n    ConnectionStringParser._FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\n    return ConnectionStringParser;\r\n}());\r\nexport { ConnectionStringParser };\r\n//# sourceMappingURL=ConnectionStringParser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = CoreUtils.toISOString(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Exception = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception) {\r\n        var exceptions = exception.exceptions\r\n            && CoreUtils.arrMap(exception.exceptions, function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, tslib_1.__assign({}, exception, { exceptions: exceptions }));\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && CoreUtils.arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (exception instanceof Error) {\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, exception.name) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(this.parsedStack, function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(exception.parsedStack, function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, tslib_1.__assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (CoreUtils.isString(stack)) {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    tslib_1.__extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        // Not converting this to CoreUtils.isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: CoreUtils.toISOString(new Date()),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { ConnectionStringParser } from './ConnectionStringParser';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map"],"names":["StorageType","FieldType","DistributedTracingModes","EventsDiscardedReason","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","__assign","assign","t","s","i","n","arguments","length","call","apply","strUndefined","strObject","strPrototype","strWindow","strJSON","getGlobal","globalThis","self","window","global","getGlobalInst","name","gbl","hasWindow","Boolean","getWindow","getDocument","hasDocument","document","getNavigator","hasNavigator","navigator","hasJSON","JSON","getJSON","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","_isTypeof","value","theType","_isUndefined","undefined","_isNullOrUndefined","_hasOwnProperty","obj","prop","_isObject","_isFunction","_attachEvent","eventNameWithoutOn","handlerRef","useCapture","result","e","_detachEvent","CoreUtils","isDate","toString","isString","isNumber","isBoolean","disableCookies","_canUseCookies","newGuid","replace","GuidRegex","c","r","Math","random","toISOString","date","pad","num","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","arrForEach","arr","callbackfn","thisArg","len","idx","arrIndexOf","searchElement","fromIndex","from","lp","max","abs","arrMap","_this","results","arrReduce","initialValue","objCreate","TypeError","tmpFunc","objKeys","hasDontEnumBug","propertyIsEnumerable","push","dontEnums","dontEnumsLength","objDefineAccessors","target","getProp","setProp","defineProp","descriptor","enumerable","configurable","get","set","addEventHandler","eventName","callback","w","doc","EventHelper","Attach","isTypeof","isUndefined","isNullOrUndefined","isFunction","isObject","LoggingSeverity","AttachEvent","Detach","DetachEvent","_InternalMessageId","_InternalLogMessage","sanitizeDiagnosticText","text","dataType","AiNonUserActionablePrefix","AiUserActionablePrefix","msgId","msg","isUserAct","properties","messageId","message","strProps","stringify","diagnosticText","DiagnosticLogger","throwInternal","severity","enableDebugExceptions","messageKey","_messageLogged","consoleLoggingLevel","WARNING","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","_areInternalMessagesThrottled","logMessage","AIInternalMessagePrefix","telemetryLoggingLevel","queue","maxInternalMessageLimit","throttleLimitMessage","throttleMessage","config","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","TelemetryPluginChain","plugin","defItemCtx","_self","_nextProxy","_hasProcessTelemetry","processTelemetry","_hasSetNext","setNextPlugin","_hasRun","getPlugin","getNext","setNext","nextPlugin","env","itemCtx","error","hasRun","diagLog","CRITICAL","identifier","_createProxyChain","plugins","proxies","lastProxy","thePlugin","newProxy","ProcessTelemetryContext","core","startAt","_copyProxyChain","proxy","add","_copyPluginChain","srcPlugins","logger","getCfg","getExtCfg","defaultValue","theConfig","extConfig","extensionConfig","getConfig","field","theValue","hasNext","processNext","createNew","BaseTelemetryPlugin","initialize","extensions","pluginChain","_baseTelInit","_isinitialized","_rootCtx","_nextPlugin","_getTelCtx","isInitialized","setInitialized","next","currentCtx","rootCtx","getProcessTelContext","priority","initializePlugins","processContext","initPlugins","lastPlugin","sortPlugins","sort","extA","extB","bHasProcess","ChannelControllerPriority","ChannelValidationMessage","_arrForEach","_objDefineAccessors","_addChannelQueue","channelQueues","_checkQueuePriority","queueItem","Error","a","_super","ChannelController","tslib_1.__extends","item","_channelQueue","queues","getChannelControls","isCookieUseDisabled","channelQueue","_createChannelQueues","channels","extensionQueue_1","_staticInit","BaseCore","notificationManager","instrumentationKey","channelController","_channelController","addNotificationListener","listener","removeNotificationListener","eventsSent","events","eventsDiscarded","reason","_notificationManager","NotificationManager","allExtensions","concat","coreExtensions","extPriorities","ext","extPriority","_extensions","getTransmissionControls","_setInit","track","telemetryItem","iKey","time","Date","ver","_eventQueue","event","thePlugins","_isInitialized","listeners","index","splice","_loop_1","this_1","setTimeout","_loop_2","this_2","AppInsightsCore","_notifyInvalidEvent","_validateTelemetryItem","pollInternalLogs","interval","diagnosticLogInterval","setInterval","baseType","baseData","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer","sanitizeKeyAndAddUniqueness","key","map","origLength","sanitizeKey","uniqueField","substring","MAX_NAME_LENGTH","padNumber","nameTrunc","trim","sanitizeString","maxLength","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","url","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","input","_msgId","inputTrunc","data","substr","str","_navigator","_isString","_uaDisallowsSameSiteNone","Util","createDomEvent","Event","createEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","setItem","getItem","removeItem","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","disallowsSameSiteNone","userAgent","_endsWith","search","start","setCookie","domain","domainAttrib","secureAttrib","location_1","getLocation","location","protocol","stringToBoolOrDefault","getCookie","cookieName","cookies","split","deleteCookie","newId","charAt","floor","random32","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isArray","isError","getIEVersion","userAgentStr","myNav","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","lineNumber","columnNumber","object","objectTypeDump","propertyValueDump","stack","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","toISOStringForIE8","UrlHelper","parseUrl","htmlAnchorElement","createElement","host","parseHost","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","match","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","regex","RegExp","test","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","commandName","parsedUrl","pathName","DateTimeUtils","Now","perf","getPerformance","now","timing","navigationStart","getTime","GetDuration","end","DEFAULT_BREEZE_ENDPOINT","ConnectionStringParser","parse","connectionString","kvPairs","_FIELDS_SEPARATOR","fields","kv","kvParts","_FIELD_KEY_VALUE_SEPARATOR","endpointsuffix","locationPrefix","ingestionendpoint","Base","Data","Envelope","sampleRate","tags","aiDataContract","Required","Hidden","Domain","EventData","envelopeType","Default","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","Exception","CreateFromInterface","ex","_ExceptionDetails","tslib_1.__assign","toInterface","_a","severityLevel","problemGroup","isManual","CreateSimpleException","typeName","assembly","fileName","details","line","frame","outerId","_StackFrame","parseStack","frames_1","level","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","baseSize","sourceFrame","matches","DataPointType","MetricData","metrics","DataPoint","kind","Measurement","count","stdDev","Metric","dataPoint","PageViewData","PageView","durationMs","duration","RemoteDependencyData","success","GeneratedRemoteDependencyData","resultCode","requestAPI","correlationContext","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData","Trace","PageViewPerfData","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","SeverityLevel","AIData","ConfigurationManager","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","TelemetryItemCreator","create","envelopeName","customProperties","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys"],"mappings":"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"}