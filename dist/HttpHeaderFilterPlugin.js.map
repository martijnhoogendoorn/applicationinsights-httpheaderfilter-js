{"version":3,"file":"HttpHeaderFilterPlugin.js","sourceRoot":"","sources":["../src/HttpHeaderFilterPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { RemoteDependencyData, IPageViewTelemetry, IMetricTelemetry, IAppInsights, IConfig } from '@microsoft/applicationinsights-common';\r\nimport { IPlugin, IConfiguration, IAppInsightsCore, ITelemetryPlugin, BaseTelemetryPlugin, CoreUtils, ITelemetryItem, IProcessTelemetryContext, ITelemetryPluginChain, _InternalMessageId, LoggingSeverity, ICustomProperties } from \"@microsoft/applicationinsights-core-js\";\r\nimport { IHttpHeaderFilterExtensionConfig } from './Interfaces/IHttpHeaderFilterExtensionConfig';\r\n\r\nexport default class HttpHeaderFilterPlugin extends BaseTelemetryPlugin {\r\n    public priority : number = 200;\r\n    public identifier: string = \"HttpHeaderFilterPlugin\";\r\n\r\n    private _analyticsPlugin!: IAppInsights;\r\n    private _extensionConfig!: IHttpHeaderFilterExtensionConfig | undefined;\r\n\r\n    initialize(config: IConfiguration & IConfig, core: IAppInsightsCore, extensions: IPlugin[], pluginChain?:ITelemetryPluginChain) {\r\n        super.initialize(config, core, extensions, pluginChain);\r\n        \r\n        this._extensionConfig =\r\n            config.extensionConfig && config.extensionConfig[this.identifier]\r\n                ? (config.extensionConfig[this.identifier] as IHttpHeaderFilterExtensionConfig)\r\n                : undefined;\r\n\r\n        CoreUtils.arrForEach(extensions, ext => {\r\n            const identifier = (ext as ITelemetryPlugin).identifier;\r\n            if (identifier === 'ApplicationInsightsAnalytics') {\r\n                this._analyticsPlugin = (ext as any) as IAppInsights;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Filters out configured information from the telemetry event prior to sending it to Application Insights\r\n     * @param event The event that needs to be processed\r\n     */\r\n    processTelemetry(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        if(this._extensionConfig !== undefined) {\r\n            // Only process RemoteDependency (Ajax and fetch requests)\r\n            if(event.baseType === RemoteDependencyData.dataType) {\r\n                let headers = event.baseData![\"properties\"]?.requestHeaders;\r\n                if(headers !== undefined && this._extensionConfig.filteredHeaders !== undefined) {            \r\n                    CoreUtils.arrForEach(Object.keys(this._extensionConfig.filteredHeaders), filteredHeader => {\r\n                        // Ensure we ignore the case of the header\r\n                        let headerProperty = this.getPropertyCaseInsensitive(headers, filteredHeader);\r\n                        // In case we found a match between configured and case insensitive property of the headers\r\n                        if(filteredHeader !== undefined && headerProperty !== undefined) {\r\n                            // If a replacement value is configured\r\n                            if(this._extensionConfig?.filteredHeaders![filteredHeader]) {\r\n                                // Enter the replacement value\r\n                                headers[headerProperty] = this._extensionConfig?.filteredHeaders![filteredHeader];\r\n                            } else {\r\n                                // Otherwise, silently delete the property\r\n                                delete headers[headerProperty];\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        this.processNext(event, itemCtx!);\r\n    }\r\n\r\n    private getPropertyCaseInsensitive(object : any, key : string) {\r\n        return Object.keys(object).filter(function(k) {\r\n            return k.toLowerCase() === key.toLowerCase();\r\n        })[0];\r\n    }\r\n\r\n    trackMetric(metric: IMetricTelemetry, customProperties: ICustomProperties) {\r\n        if (this._analyticsPlugin) {\r\n            this._analyticsPlugin.trackMetric(metric, customProperties);\r\n        } else {\r\n            this.diagLog().throwInternal(\r\n                LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"Analytics plugin is not available, React plugin telemetry will not be sent: \");\r\n        }\r\n    }\r\n\r\n    trackPageView(pageView: IPageViewTelemetry) {\r\n        if (this._analyticsPlugin) {\r\n            this._analyticsPlugin.trackPageView(pageView);\r\n        } else {\r\n            this.diagLog().throwInternal(\r\n                LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"Analytics plugin is not available, React plugin telemetry will not be sent: \");\r\n        }\r\n    }\r\n}\r\n"]}